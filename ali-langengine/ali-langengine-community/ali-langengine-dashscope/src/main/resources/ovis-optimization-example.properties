# Ovis模型推理优化配置示例
# 此文件展示了如何配置Ovis模型的各种优化参数

# ==================== 基础配置 ====================
# DashScope API密钥
dashscope_api_key=your_api_key_here
dashscope_server_url=https://dashscope.aliyuncs.com/
dashscope_api_timeout=120

# ==================== 模型量化优化 ====================
# 启用模型量化（推荐：true）
dashscope.enable.quantization=true
# 量化类型：INT8（推荐）, FP16, BF16
dashscope.quantization.type=INT8

# ==================== 模型剪枝优化 ====================
# 启用模型剪枝（可选：true）
dashscope.enable.pruning=false
# 剪枝比例：0.0-1.0之间，建议0.1-0.3
dashscope.pruning.ratio=0.1

# ==================== 注意力机制优化 ====================
# 启用FlashAttention优化（推荐：true）
dashscope.enable.attention.optimization=true

# ==================== 批处理优化 ====================
# 默认批处理大小：建议4-16
dashscope.batch.size=8
# 最大批处理大小：建议16-32
dashscope.max.batch.size=32
# 启用动态批大小调整（推荐：true）
dashscope.enable.dynamic.batch.size=true

# ==================== 缓存优化 ====================
# 基础缓存大小
dashscope.cache.size=1000
# L1缓存大小（内存缓存）
dashscope.l1.cache.size=1000
# L2缓存大小（磁盘缓存）
dashscope.l2.cache.size=5000
# 缓存TTL（毫秒）：1小时=3600000
dashscope.cache.ttl=3600000

# ==================== 异步处理优化 ====================
# 启用异步处理（推荐：true）
dashscope.enable.async.processing=true
# 异步线程池大小：建议CPU核心数的1-2倍
dashscope.async.thread.pool.size=8

# ==================== 性能监控 ====================
# 启用性能监控（推荐：true）
dashscope.enable.performance.monitoring=true
# 监控采样率：0.0-1.0，建议0.1（10%）
dashscope.monitoring.sample.rate=0.1

# ==================== 图像处理优化 ====================
# 启用图像压缩（推荐：true）
dashscope.enable.image.compression=true
# 图像压缩质量：0.0-1.0，建议0.8
dashscope.image.compression.quality=0.8

# ==================== 流式处理优化 ====================
# 启用流式处理缓存（推荐：true）
dashscope.enable.stream.cache=true
# 流式缓存大小
dashscope.stream.cache.size=500

# ==================== 请求预处理 ====================
# 启用请求预处理（推荐：true）
dashscope.enable.request.preprocessing=true
# 启用响应后处理（推荐：true）
dashscope.enable.response.postprocessing=true

# ==================== 系统维护 ====================
# 清理任务执行间隔（秒）：5分钟=300
dashscope.cleanup.interval=300
# 参数调整间隔（秒）：30秒
dashscope.parameter.adjustment.interval=30

# ==================== 优化级别预设 ====================
# 优化级别：basic（基础）, standard（标准）, advanced（高级）
dashscope.optimization.level=standard

# ==================== 高级配置示例 ====================

# 生产环境高性能配置
# dashscope.enable.quantization=true
# dashscope.quantization.type=INT8
# dashscope.enable.attention.optimization=true
# dashscope.batch.size=16
# dashscope.enable.async.processing=true
# dashscope.async.thread.pool.size=16
# dashscope.optimization.level=advanced

# 开发环境平衡配置
# dashscope.enable.quantization=false
# dashscope.enable.attention.optimization=true
# dashscope.batch.size=4
# dashscope.enable.async.processing=true
# dashscope.async.thread.pool.size=4
# dashscope.optimization.level=standard

# 内存受限环境配置
# dashscope.enable.quantization=true
# dashscope.quantization.type=INT8
# dashscope.enable.pruning=true
# dashscope.pruning.ratio=0.2
# dashscope.batch.size=2
# dashscope.l1.cache.size=500
# dashscope.l2.cache.size=2000
# dashscope.optimization.level=basic
